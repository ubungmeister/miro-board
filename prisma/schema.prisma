generator client {
  provider = "prisma-client-js"
  previewFeatures = ["referentialActions"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  directUrl = env("DIRECT_URL") 
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model User {
  id            String    @id @default(uuid())
  name          String?
  email         String   @unique
  emailVerified DateTime?
  image         String?
  password      String?   // Optional because Google users won't have a password
  accounts      Account[]
  sessions      Session[]
  boards        Board[]   @relation("CreatedBoards")
  notes         Note[]    @relation("CreatedNotes")
}

// Board model (represents a canvas or whiteboard)
model Board {
  id         String    @id @default(uuid())
  title      String
  createdAt  DateTime  @default(now())
  createdBy  String
  notes      Note[]

  user       User      @relation(fields: [createdBy], references: [id], name: "CreatedBoards", onDelete: Cascade)

  @@index([createdBy]) // Index for faster queries when filtering by creator
}

// Note model (individual sticky notes)
// Each note belongs to a board and a user
model Note {
  id         String    @id @default(uuid())
  content    String
  posX       Float     @default(0)
  posY       Float     @default(0)
  color      String    @default("#FFF9B1")
  createdAt  DateTime  @default(now())
  createdBy  String
  boardId    String

  board      Board     @relation(fields: [boardId], references: [id], onDelete: Cascade)
  user       User      @relation(fields: [createdBy], references: [id], name: "CreatedNotes", onDelete: Cascade)

  @@index([boardId])   // Index for faster queries when filtering by board
  @@index([createdBy]) // Index for faster queries when filtering by creator
}
